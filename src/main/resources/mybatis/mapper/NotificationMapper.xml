<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yuanzhi.tourism.dao.NotificationMapper">
  <resultMap id="BaseResultMap" type="com.yuanzhi.tourism.entity.Notification">
    <id column="nid" jdbcType="INTEGER" property="nid" />
    <result column="sendTime" jdbcType="VARCHAR" property="sendtime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="typeIdName" jdbcType="VARCHAR" property="typeidname" />
    <result column="receiver" jdbcType="INTEGER" property="receiver" />
    <result column="notificationer" jdbcType="INTEGER" property="notificationer" />
    <result column="notificationerName" jdbcType="VARCHAR" property="notificationername" />
    <result column="status" jdbcType="INTEGER" property="status" />
  </resultMap>
  <resultMap id="BaseResultMapWithUserName" type="com.yuanzhi.tourism.dto.NotificationDTO">
    <id column="nid" jdbcType="INTEGER" property="nid" />
    <result column="sendTime" jdbcType="VARCHAR" property="sendtime" />
    <result column="type" jdbcType="INTEGER" property="type" />
    <result column="typeId" jdbcType="INTEGER" property="typeid" />
    <result column="typeName" jdbcType="VARCHAR" property="typename" />
    <result column="typeIdName" jdbcType="VARCHAR" property="typeidname" />
    <result column="receiver" jdbcType="INTEGER" property="receiver" />
    <result column="notificationer" jdbcType="INTEGER" property="notificationer" />
    <result column="notificationerName" jdbcType="VARCHAR" property="notificationername" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="userName" jdbcType="VARCHAR" property="username" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    nid, sendTime, type, typeId, typeName, typeIdName, receiver, notificationer, notificationerName, 
    status
  </sql>
  <select id="selectByExample" parameterType="com.yuanzhi.tourism.entity.NotificationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from notification
    where nid = #{nid,jdbcType=INTEGER}
  </select>
  <select id="getAll" resultMap="BaseResultMapWithUserName">
    SELECT nid, sendTime, type, typeId, typeName, typeIdName, receiver, notificationer, notificationerName,
    notification.`status`,userName from notification LEFT JOIN `user` ON notification.receiver = `user`.uid
    limit #{page,jdbcType=INTEGER},#{limit,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from notification
    where nid = #{nid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.yuanzhi.tourism.entity.NotificationExample">
    delete from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.yuanzhi.tourism.entity.Notification">
    insert into notification (nid, sendTime, type, 
      typeId, typeName, typeIdName, 
      receiver, notificationer, notificationerName, 
      status)
    values (#{nid,jdbcType=INTEGER}, #{sendtime,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{typeid,jdbcType=INTEGER}, #{typename,jdbcType=VARCHAR}, #{typeidname,jdbcType=VARCHAR}, 
      #{receiver,jdbcType=INTEGER}, #{notificationer,jdbcType=INTEGER}, #{notificationername,jdbcType=VARCHAR}, 
      #{status,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.yuanzhi.tourism.entity.Notification">
    insert into notification
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        nid,
      </if>
      <if test="sendtime != null">
        sendTime,
      </if>
      <if test="type != null">
        type,
      </if>
      <if test="typeid != null">
        typeId,
      </if>
      <if test="typename != null">
        typeName,
      </if>
      <if test="typeidname != null">
        typeIdName,
      </if>
      <if test="receiver != null">
        receiver,
      </if>
      <if test="notificationer != null">
        notificationer,
      </if>
      <if test="notificationername != null">
        notificationerName,
      </if>
      <if test="status != null">
        status,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="nid != null">
        #{nid,jdbcType=INTEGER},
      </if>
      <if test="sendtime != null">
        #{sendtime,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        #{type,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typeidname != null">
        #{typeidname,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        #{receiver,jdbcType=INTEGER},
      </if>
      <if test="notificationer != null">
        #{notificationer,jdbcType=INTEGER},
      </if>
      <if test="notificationername != null">
        #{notificationername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.yuanzhi.tourism.entity.NotificationExample" resultType="java.lang.Long">
    select count(*) from notification
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update notification
    <set>
      <if test="record.nid != null">
        nid = #{record.nid,jdbcType=INTEGER},
      </if>
      <if test="record.sendtime != null">
        sendTime = #{record.sendtime,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null">
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.typeid != null">
        typeId = #{record.typeid,jdbcType=INTEGER},
      </if>
      <if test="record.typename != null">
        typeName = #{record.typename,jdbcType=VARCHAR},
      </if>
      <if test="record.typeidname != null">
        typeIdName = #{record.typeidname,jdbcType=VARCHAR},
      </if>
      <if test="record.receiver != null">
        receiver = #{record.receiver,jdbcType=INTEGER},
      </if>
      <if test="record.notificationer != null">
        notificationer = #{record.notificationer,jdbcType=INTEGER},
      </if>
      <if test="record.notificationername != null">
        notificationerName = #{record.notificationername,jdbcType=VARCHAR},
      </if>
      <if test="record.status != null">
        status = #{record.status,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update notification
    set nid = #{record.nid,jdbcType=INTEGER},
      sendTime = #{record.sendtime,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      typeId = #{record.typeid,jdbcType=INTEGER},
      typeName = #{record.typename,jdbcType=VARCHAR},
      typeIdName = #{record.typeidname,jdbcType=VARCHAR},
      receiver = #{record.receiver,jdbcType=INTEGER},
      notificationer = #{record.notificationer,jdbcType=INTEGER},
      notificationerName = #{record.notificationername,jdbcType=VARCHAR},
      status = #{record.status,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.yuanzhi.tourism.entity.Notification">
    update notification
    <set>
      <if test="sendtime != null">
        sendTime = #{sendtime,jdbcType=VARCHAR},
      </if>
      <if test="type != null">
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="typeid != null">
        typeId = #{typeid,jdbcType=INTEGER},
      </if>
      <if test="typename != null">
        typeName = #{typename,jdbcType=VARCHAR},
      </if>
      <if test="typeidname != null">
        typeIdName = #{typeidname,jdbcType=VARCHAR},
      </if>
      <if test="receiver != null">
        receiver = #{receiver,jdbcType=INTEGER},
      </if>
      <if test="notificationer != null">
        notificationer = #{notificationer,jdbcType=INTEGER},
      </if>
      <if test="notificationername != null">
        notificationerName = #{notificationername,jdbcType=VARCHAR},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
    </set>
    where nid = #{nid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.yuanzhi.tourism.entity.Notification">
    update notification
    set sendTime = #{sendtime,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      typeId = #{typeid,jdbcType=INTEGER},
      typeName = #{typename,jdbcType=VARCHAR},
      typeIdName = #{typeidname,jdbcType=VARCHAR},
      receiver = #{receiver,jdbcType=INTEGER},
      notificationer = #{notificationer,jdbcType=INTEGER},
      notificationerName = #{notificationername,jdbcType=VARCHAR},
      status = #{status,jdbcType=INTEGER}
    where nid = #{nid,jdbcType=INTEGER}
  </update>
</mapper>